{"version":3,"file":"laytpl.js","sources":["../../src/modules/laytpl.js"],"sourcesContent":["/**\n * laytpl\n * 轻量级通用模板引擎\n */\n\n\n  var MOD_NAME = 'laytpl';\n\n  // 实例接口\n  var thisModule = function() {\n    var that = this;\n    var options = that.config;\n\n    return {\n      config: options,\n\n      /**\n       * 渲染模板\n       * @param {Object} data - 模板数据\n       * @param {Function} callback - 回调函数\n       * @returns {string} 渲染后的模板\n       */\n      render: function(data, callback) {\n        options.data = data\n        var html = that.render();\n\n        // 如果传入目标元素选择器，则直接将模板渲染到目标元素中\n        if (options.target) {\n          var elem = document.querySelector(options.target);\n          if (elem) {\n            elem.innerHTML = html;\n          }\n        }\n\n        // 返回结果\n        return typeof callback === 'function'\n          ? (callback(html), this)\n          : html;\n      },\n\n      /**\n       * 编译新的模板\n       * @param {string} template - 模板\n       * @returns {this}\n       */\n      compile: function(template) {\n        options.template = template;\n        delete that.compilerCache; // 清除模板缓存\n        // that.compile(template);\n        return this;\n      },\n\n      /**\n       * 模板编译错误事件\n       * @param {Function} callback\n       * @returns {this}\n       */\n      error: function(callback) {\n        callback && (options.error = callback);\n        return this;\n      },\n\n      /**\n       * 以下为兼容旧版本相关方法\n       */\n\n      // 解析并渲染模板\n      parse: function(template, data) {\n        return this.compile(template).render(data);\n      }\n    };\n  };\n\n  // 模板内部变量\n  var vars = {\n    // 字符转义\n    escape: function(html) {\n      var exp = /[<\"'>]|&(?=#?[a-zA-Z0-9]+)/g;\n      if (html === undefined || html === null) return '';\n      html += '';\n      if (!exp.test(html)) return html;\n      return html.replace(exp, function(str) {\n        return '&#'+ str.charCodeAt(0) + ';';\n      });\n    }\n  };\n\n  // 组件工具类方法\n  var tools = {\n    /**\n     * 创建动态正则表达式\n     * @param {string} str - 表达式字符\n     * @param {string} mod - 修饰符\n     * @returns {RegExp} - 正则表达式\n     */\n    regex: function(str, mod) {\n      return new RegExp(str, mod || 'g');\n    },\n\n    /**\n     * 错误提示\n     * @param {string} e - 原始错误信息\n     * @param {Object} opts - 自定义选项\n     * @param {Function} error - 错误回调\n     * @returns {string} - 错误提示\n     */\n    error: function(e, opts, error) {\n      opts = opts || {};\n      opts = Object.assign({\n        errorContext: ''\n      }, opts);\n\n      // 向控制台输出错误信息\n      var message = 'Laytpl '+ (opts.type || '') +'Error: ' + e;\n      var errorContext = opts.errorContext;\n\n      delete opts.errorContext;\n      typeof console === 'object' && console.error(message, '\\n', errorContext, '\\n', opts);\n      typeof error === 'function' && error(opts); // 执行错误回调\n      return message; // 向视图返回错误提示\n    }\n  };\n\n  // 默认配置\n  var config = {\n    open: '{{', // 起始界定符\n    close: '}}', // 结束界定符\n    cache: true, // 是否开启模板缓存，以便下次渲染时不重新编译模板\n    condense: true, // 是否压缩模板空白符，如：将多个连续的空白符压缩为单个空格\n    tagStyle: '' // 标签风格。默认采用 < 2.11 的风格，设置 modern 则采用 2.11+ 风格\n  };\n\n  // 构造器\n  var Class = function(template, options) {\n    var that = this;\n\n    // 选项合并\n    options = that.config = Object.assign({\n      template: template\n    }, config, options);\n\n    // 当前实例的模板内工具\n    that.vars = Object.assign({\n      /**\n       * 引用外部模板。若在 Node.js 环境，可通过重置该方法实现模板文件导入\n       * @param {string} id - 模板 ID\n       * @param {Object} data - 模板数据\n       * @returns {string} 模板渲染后内容\n       */\n      include: function(id, data) {\n        var elem = document.getElementById(id);\n        var template = elem ? elem.innerHTML : '';\n        return template ? that.render(template, data) : '';\n      }\n    }, vars);\n\n    // 编译模板\n    that.compile(options.template);\n  };\n\n  /**\n   * 渲染\n   * @param {Object} template - 模板\n   * @param {Object} data - 数据\n   * @returns {string} 渲染后的模板内容\n   */\n  Class.prototype.render = function(template, data) {\n    var that = this;\n    var options = that.config;\n\n    // 获得模板渲染函数\n    var compiler = template ? that.compile(template) : (\n      that.compilerCache || that.compile(options.template)\n    );\n\n    // 获取渲染后的字符\n    var html = function() {\n      data = data || options.data || {};\n      try {\n        return compiler(data);\n      } catch(e) {\n        template = template || options.template;\n        return tools.error(e, {\n          errorContext: that.extractErrorContext(template, data),\n          template: template,\n          type: 'Render'\n        }, options.error);\n      }\n    }();\n\n    // 缓存编译器\n    if (options.cache && !template) {\n      that.compilerCache = compiler;\n    }\n\n    return html; // 返回渲染后的字符\n  };\n\n  /**\n   * 编译模板\n   * @param {string} template - 原始模板\n   * @returns {Function} 模板编译器，用于后续数据渲染\n   */\n  Class.prototype.compile = function(template) {\n    var that = this;\n    var options = that.config;\n    var openDelimiter = options.open;\n    var closeDelimiter = options.close;\n    var condense = options.condense;\n    var regex = tools.regex;\n    var placeholder = '\\u2028'; // Unicode 行分隔符\n\n    // console.log('compile');\n\n    // 模板必须为 string 类型，且不能为空\n    if (typeof template !== 'string' || !template) {\n      return function() {\n        return '';\n      };\n    }\n\n    /**\n     * 完整标签正则\n     * @param {string[]} cores - 标签内部核心表达式，含：前置、主体、后置\n     * @param {Object} sides - 标签两侧外部表达式\n     * @returns {RegExp}\n     */\n    var tagRegex = function(cores, sides) {\n      var arr = [\n        '(?:'+ openDelimiter + (cores[0] || '') +'\\\\s*)', // 界定符前置\n        '('+ (cores[1] || '[\\\\s\\\\S]') +'*?)', // 标签主体\n        '(?:\\\\s*'+ (cores[2] || '') + closeDelimiter +')' // 界定符后置\n      ];\n      sides = sides || {};\n      sides.before && arr.unshift(sides.before); // 标签前面的表达式\n      sides.after && arr.push(sides.after); // 标签后面的表达式\n      return regex(arr.join(''));\n    };\n\n    // 匹配非输出类型标签两侧的换行符和空白符，避免渲染后占用一行\n    var sidesRegex = condense ? ['', ''] : ['(?:(?:\\\\n)*\\\\s*)', '(?:\\\\s*?)'];\n    var delimSides = {\n      before: sidesRegex[0],\n      after: sidesRegex[1]\n    };\n\n    /**\n     * 清理多余符号\n     * @param {string} body - 标签主体字符\n     * @param {boolean} nowrap - 是否强制不换行\n     * @returns {string} 清理后的字符\n     */\n    var clear = function(body, nowrap) {\n      if (!condense) {\n        // 还原语句中的 Unicode 行分隔符\n        body = body.replace(regex(placeholder), nowrap ? '' : '\\n');\n      }\n      body = body.replace(/\\\\(\\\\|\")/g, '$1'); // 去除多余反斜杠\n      return body;\n    };\n\n    // 纠正标签结构\n    var correct = function(tpl) {\n      return tpl.replace(regex('([}\\\\]])'+ closeDelimiter), '$1 '+ closeDelimiter);\n    };\n\n    // 模板解析\n    var parse = that.parse = function(tpl) {\n      tpl = tpl || '';\n      if (!tpl) return tpl;\n\n      // 压缩连续空白符\n      if (condense) {\n        tpl = tpl.replace(/\\t/g, ' ').replace(/\\s+/g, ' ');\n      }\n\n      // 初始整理\n      tpl = correct(tpl) // 纠正标签\n      .replace(/(?=\\\\|\")/g, '\\\\')  // 转义反斜杠和双引号\n      .replace(/\\r?\\n/g, condense ? '' : placeholder); // 整理换行符\n\n      // 忽略标签 - 即区域中的内容不进行标签解析\n      tpl = tpl.replace(tagRegex(['!', '', '!'], delimSides), function(str, body) {\n        body = body.replace(regex(openDelimiter + '|' + closeDelimiter), function(tag) {\n          return tag.replace(/(?=.)/g, '\\\\');\n        });\n        return body;\n      });\n\n      // 模板字符拼接\n      var strConcatenation = function(body) {\n        // 通过对 20k+ 行的模板进行编译测试， 发现 Chrome `+=` 性能竟优于 `push`\n        // 1k 次循环 + 1k 行数据量进行模板编译+渲染，发现 `+=` 性能仍然优于 `push`\n        // 考虑可能是 V8 做了 Ropes 结构优化？ 或跟模板采用「静态拼接」的实现有关（可能性更大）\n        return ['\";', body, '__laytpl__+=\"'].join('\\n');\n        // return ['\");', body, '__laytpl__.push(\"'].join('\\n');\n      };\n\n      // 解析输出标签\n      var output = function(str, delimiter, body) {\n        var _escape;\n\n        if (!body) return '';\n        body = clear(body, true);\n\n        // 输出方式\n        if (delimiter === '-') {  // 原文输出，即不对 HTML 原文进行转义\n          _escape = '';\n        } else { // 转义输出\n          _escape = '_escape';\n        }\n\n        return body ? strConcatenation(\n          '__laytpl__+='+ _escape +'('+ body +');'\n          // '__laytpl__.push('+ _escape +'('+ body +'));'\n        ) : '';\n      };\n\n      // 解析 Scriptlet\n      var statement = function(str, body) {\n        if (!body) return '';\n        body = clear(body);\n        return strConcatenation(body);\n      };\n\n      // 标签风格\n      if (options.tagStyle === 'modern') { // 2.11+ 版本风格\n        // 注释标签 - 仅在模板中显示，不进行解析，也不在视图中输出\n        tpl = tpl.replace(tagRegex(['#'], delimSides), '');\n        // 输出标签\n        tpl = tpl.replace(tagRegex(['(=|-)']), output);\n        // Scriptlet 标签\n        tpl = tpl.replace(tagRegex([], delimSides), statement);\n      } else { // < 2.11 版本风格\n        // Scriptlet 标签\n        tpl = tpl.replace(tagRegex(['#'], delimSides), statement);\n        // 输出标签\n        tpl = tpl.replace(tagRegex(['(=|-)*']), output);\n      }\n\n      // 恢复换行符\n      if (!condense) {\n        tpl = tpl.replace(regex(placeholder), '\\\\n');\n      }\n\n      return tpl;\n    };\n\n    /**\n     * 创建模板编译器\n     * 请注意: 开发者在使用模板语法时，需确保模板中的 JS 语句不来自于页面用户输入。\n     * 即模板中的 JS 语句必须在页面开发者自身的可控范围内，否则请避免使用该模板解析。\n     */\n    var createCompiler = that.createCompiler = function(template, builder) {\n      builder = builder || createBuilder(template);\n      return new Function('laytpl', 'return '+ builder)(that.vars);\n    };\n    var createBuilder = that.createBuilder = function(template, builder) {\n       builder = builder || [\n        'function(d){',\n          '\"use strict\";',\n          'var __laytpl__=\"\",'+\n          function() { // 内部变量\n            // 内部方法\n            var arr = [];\n            for (var key in that.vars) {\n              arr.push(((key === 'escape' ? '_' : '') + key) +'=laytpl.'+ key);\n            }\n            return arr.join(',');\n          }() + ';',\n          '__laytpl__=\"'+ parse(template) +'\";',\n          'return __laytpl__;',\n          // '__laytpl__.push(\"'+ parse(template) +'\");',\n          // 'return __laytpl__.join(\"\");',\n        '};'\n      ].join('\\n');\n      // console.log(builder);\n      return builder;\n    };\n\n    try {\n      return createCompiler(template); // 返回编译器\n    } catch(e) {\n      delete that.compilerCache;\n      return function() {\n        return tools.error(e, {\n          errorContext: that.extractErrorContext(template),\n          template: template,\n          type: 'Compile'\n        }, options.error);\n      };\n    }\n  };\n\n  /**\n   * 获取模板出错行上下文\n   * @param {string} template - 原始模板\n   * @param {Object} data - 数据\n   * @returns {string}\n   */\n  Class.prototype.extractErrorContext = function(template, data) {\n    var that = this;\n\n    // 给模板每行开头添加行号标记\n    var lineNum = 1; // 行号\n    var templateArr = template.split(/\\r?\\n/g);\n\n    template = template.replace(/(?=^)/gm, function() {\n      return '/*LINE:'+ (lineNum++) +'*/';\n    });\n\n    var builder = that.createBuilder(template);\n    var builderArr = builder.split(/\\r?\\n/);\n    var sourceURL = 'laytpl.builder.map';\n\n    // 模板出错行上下文\n    var errorContext = function(errLineNum) {\n      errLineNum = parseInt(errLineNum) - 1;\n\n      var arr = [''];\n      var contextLines = 3; // 错误行上下延伸的行数\n      var start = Math.max(0, errLineNum - contextLines);\n      var end = Math.min(templateArr.length, errLineNum + contextLines);\n\n      for (; start <= end; start++) {\n        arr.push(\n          (start == errLineNum ? '? ' : '  ') +\n          ((start + 1) + '| ') +\n          templateArr[start]\n        );\n      }\n\n      return arr.join('\\n') + '\\n';\n    };\n\n    try {\n      builder += ('\\n//# sourceURL='+ sourceURL); // 添加映射\n      var compiler = that.createCompiler(template, builder);\n      if (data) compiler(data);\n    } catch(e) {\n      // 提取堆栈报错行号\n      var stackLineNumRegxp = tools.regex(sourceURL.replace(/\\./g, '\\\\.')+':(\\\\d+)', 'i');\n      var stackLineNum = (e.stack.match(stackLineNumRegxp) || [])[1] || 0;\n\n      // 提取模板实际行号\n      var extractErrLineNum = function(stackLineNum, isRecursion) {\n        var lineNumRegxp = isRecursion ? /\\/\\*LINE:(\\d+)\\*\\/[^*]*$/ : /\\/\\*LINE:(\\d+)\\*\\//;\n        var errLineNum = String(builderArr[stackLineNum - 1]).match(lineNumRegxp) || [];\n        errLineNum = errLineNum[1];\n\n        // 若当前行未找到行号映射，则递归查找上一行\n        if (!errLineNum && stackLineNum > 0) {\n          return extractErrLineNum(stackLineNum - 1, true);\n        }\n\n        return errLineNum;\n      };\n\n      // 此处减去 anonymous 开头占用的 2 行\n      var errLineNum = extractErrLineNum(stackLineNum - 2);\n\n      // 若未找到映射行号，则直接返回 SyntaxError 对象（通过 DevTools 映射源查看模板行号标记）\n      return errLineNum ? errorContext(errLineNum) : e;\n    }\n  };\n\n  /**\n   * 创建实例\n   * @param {string} template - 模板\n   * @param {Object} options - 选项\n   * @returns {Object}\n   */\n  var laytpl = function(template, options) {\n    var inst = new Class(template, options);\n    return thisModule.call(inst);\n  };\n\n  /**\n   * 扩展模板内部变量\n   * @param {Object} variables - 扩展内部变量，变量值通常为函数\n   */\n  laytpl.extendVars = function(variables) {\n    Object.assign(vars, variables);\n  };\n\n  /**\n   * 设置默认配置\n   * @param {Object} options - 选项\n   */\n  laytpl.config = laytpl.set = function(options) {\n    Object.assign(config, options);\n  };\n\n  // 输出接口\n  export { laytpl };\n  export default laytpl;\n"],"names":[],"mappings":"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"}